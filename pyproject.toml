[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "simple-audio-programming"
version = "1.0.0"
description = "音響プログラミング学習用の教育的Pythonライブラリ"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Simple Audio Programming Team"},
]
keywords = ["audio", "programming", "education", "dsp", "synthesis"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Education",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "jupyter>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "flake8>=5.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/ggszk/simple-audio-programming"
Repository = "https://github.com/ggszk/simple-audio-programming.git"
Issues = "https://github.com/ggszk/simple-audio-programming/issues"
Documentation = "https://simple-audio-programming.readthedocs.io/"

[tool.setuptools.packages.find]
where = ["."]
include = ["audio_lib*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["audio_lib"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["matplotlib.*", "scipy.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
# テストディスカバリの設定
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# テスト実行オプション
addopts = [
    "-v",                    # 詳細出力
    "--tb=short",           # トレースバック短縮表示
    "--strict-markers",     # 未定義マーカーでエラー
    "--strict-config",      # 設定エラーを厳格に扱う
    "--color=yes",          # カラー出力
]

# マーカー定義
markers = [
    "slow: 実行時間の長いテスト",
    "integration: 統合テスト",
    "unit: 単体テスト",
    "lesson1: Lesson 1関連のテスト",
    "lesson2: Lesson 2関連のテスト", 
    "lesson3: Lesson 3関連のテスト",
    "lesson4: Lesson 4関連のテスト",
    "audio: 音声処理関連のテスト",
    "effects: エフェクト関連のテスト",
    "oscillators: オシレーター関連のテスト",
    "envelopes: エンベロープ関連のテスト",
]

# テストフィルタリング
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
